{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/drpoojayadav/Downloads/C74/FirestoreQuery/screens/SearchScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\nimport db from \"../config\";\n\nvar Searchscreen = function (_React$Component) {\n  _inherits(Searchscreen, _React$Component);\n\n  var _super = _createSuper(Searchscreen);\n\n  function Searchscreen(props) {\n    var _this;\n\n    _classCallCheck(this, Searchscreen);\n\n    _this = _super.call(this, props);\n\n    _this.fetchMoreTransactions = function _callee() {\n      var query;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").startAfter(_this.state.lastVisibleTransaction).limit(10).get());\n\n            case 2:\n              query = _context.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.componentDidMount = function _callee2() {\n      var query;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").get());\n\n            case 2:\n              query = _context2.sent;\n              query.docs.map(function (doc) {\n                return _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      allTransactions: [],\n      lastVisibleTransaction: null,\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(Searchscreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.bar,\n        placeholder: \"Enter Book ID or Student ID\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            search: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.searchTransactions(_this2.state.search);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Search\"))), React.createElement(FlatList, {\n        data: this.state.allTransactions,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              borderBottomWidth: 2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }\n          }, \"Book ID: \" + item.bookId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }\n          }, \"Student ID: \" + item.studentId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }\n          }, \"Transaction Type: \" + item.transactionType), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }\n          }, \"Date: \" + item.date.toDate()));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReached: this.fetchMoreTransactions,\n        onEndReachedThreshold: 0.7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Searchscreen;\n}(React.Component);\n\nexport { Searchscreen as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/drpoojayadav/Downloads/C74/FirestoreQuery/screens/SearchScreen.js"],"names":["React","firebase","db","Searchscreen","props","fetchMoreTransactions","collection","startAfter","state","lastVisibleTransaction","limit","get","query","docs","map","doc","setState","allTransactions","data","componentDidMount","search","styles","container","bar","text","searchButton","searchTransactions","item","borderBottomWidth","bookId","studentId","transactionType","date","toDate","index","toString","Component","StyleSheet","create"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,EAAP;;IAEqBC,Y;;;;;AAEjB,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,UAWlBC,qBAXkB,GAWM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACFH,EAAE,CACrBI,UADmB,CACR,cADQ,EAEnBC,UAFmB,CAER,MAAKC,KAAL,CAAWC,sBAFH,EAGnBC,KAHmB,CAGb,EAHa,EAInBC,GAJmB,EADE;;AAAA;AAChBC,cAAAA,KADgB;AAOtBA,cAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACC,GAAD,EAAO;AACpB,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,eAAe,+BAAM,MAAKT,KAAL,CAAWS,eAAjB,IAAkCF,GAAG,CAACG,IAAJ,EAAlC,EADH;AAEZT,kBAAAA,sBAAsB,EAAEM;AAFZ,iBAAd;AAID,eALD;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXN;;AAAA,UA2BlBI,iBA3BkB,GA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEjB,EAAE,CACrBI,UADmB,CACR,cADQ,EAEnBK,GAFmB,EADF;;AAAA;AACZC,cAAAA,KADY;AAKlBA,cAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACC,GAAD;AAAA,uBACb,MAAKC,QAAL,CAAc;AACZC,kBAAAA,eAAe,+BAAM,MAAKT,KAAL,CAAWS,eAAjB,IAAkCF,GAAG,CAACG,IAAJ,EAAlC,EADH;AAEZT,kBAAAA,sBAAsB,EAAEM;AAFZ,iBAAd,CADa;AAAA,eAAf;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3BF;;AAGhB,UAAKP,KAAL,GAAa;AACXS,MAAAA,eAAe,EAAE,EADN;AAEXR,MAAAA,sBAAsB,EAAE,IAFb;AAGXW,MAAAA,MAAM,EAAE;AAHG,KAAb;AAHgB;AAQjB;;;;WAiCD,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAID,MAAM,CAACE,GADlB;AAEE,QAAA,WAAW,EAAG,6BAFhB;AAGE,QAAA,YAAY,EAAI,sBAACC,IAAD,EAAQ;AACtB,UAAA,MAAI,CAACR,QAAL,CAAc;AACZI,YAAAA,MAAM,EAAEI;AADI,WAAd;AAGD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAIH,MAAM,CAACI,YADlB;AAEE,QAAA,OAAO,EAAI,mBAAI;AACb,UAAA,MAAI,CAACC,kBAAL,CAAwB,MAAI,CAAClB,KAAL,CAAWY,MAAnC;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CAVF,CAFF,EAqBE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAI,KAAKZ,KAAL,CAAWS,eADrB;AAGE,QAAA,UAAU,EAAI;AAAA,cAAEU,IAAF,QAAEA,IAAF;AAAA,iBACZ,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAI;AAACC,cAAAA,iBAAiB,EAAE;AAApB,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,cAAcD,IAAI,CAACE,MAA1B,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,iBAAiBF,IAAI,CAACG,SAA7B,CAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,uBAAuBH,IAAI,CAACI,eAAnC,CAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,WAAWJ,IAAI,CAACK,IAAL,CAAUC,MAAV,EAAlB,CAJF,CADY;AAAA,SAHhB;AAYE,QAAA,YAAY,EAAI,sBAACN,IAAD,EAAOO,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SAZlB;AAcE,QAAA,YAAY,EAAI,KAAK9B,qBAdvB;AAgBE,QAAA,qBAAqB,EAAI,GAhB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF;AA2CD;;;;EAvFqCL,KAAK,CAACoC,S;;SAA3BjC,Y;AA2FrB,IAAMkB,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Text, View, FlatList, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\nimport firebase from 'firebase';\nimport db from '../config';\n\nexport default class Searchscreen extends React.Component {\n\n    constructor(props){\n      super(props);\n\n      this.state = {\n        allTransactions: [],\n        lastVisibleTransaction: null,\n        search: ''\n      }\n    }\n\n\n    fetchMoreTransactions = async ()=>{\n      const query = await db\n      .collection(\"transactions\")\n      .startAfter(this.state.lastVisibleTransaction)\n      .limit(10)\n      .get();\n\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransactions: [...this.state.allTransactions, doc.data()],\n          lastVisibleTransaction: doc\n        })\n      });\n    }\n\n\n    componentDidMount = async ()=>{\n      const query = await db\n      .collection(\"transactions\")\n      .get();\n\n      query.docs.map((doc)=>(\n        this.setState({\n          allTransactions: [...this.state.allTransactions, doc.data()],\n          lastVisibleTransaction: doc\n        })\n      ));\n    }\n\n\n    render() {\n      return (\n        <View style = {styles.container}>\n\n          <View>\n            <TextInput \n              style = {styles.bar}\n              placeholder = \"Enter Book ID or Student ID\"\n              onChangeText = {(text)=>{\n                this.setState({\n                  search: text\n                })\n              }} />\n\n            <TouchableOpacity\n              style = {styles.searchButton}\n              onPress = {()=>{\n                this.searchTransactions(this.state.search)\n              }}>\n                <Text>Search</Text>\n            </TouchableOpacity>  \n          </View>\n\n          <FlatList \n            data = {this.state.allTransactions}\n\n            renderItem = {({item})=>(\n              <View style = {{borderBottomWidth: 2}}>\n                <Text>{\"Book ID: \" + item.bookId}</Text>\n                <Text>{\"Student ID: \" + item.studentId}</Text>\n                <Text>{\"Transaction Type: \" + item.transactionType}</Text>\n                <Text>{\"Date: \" + item.date.toDate()}</Text>\n              </View>\n            )}\n\n            keyExtractor = {(item, index) => index.toString()}\n\n            onEndReached = {this.fetchMoreTransactions}\n\n            onEndReachedThreshold = {0.7}\n          />   \n\n        </View>\n      );\n    }\n\n}\n\nconst styles = StyleSheet.create({})"]},"metadata":{},"sourceType":"module"}